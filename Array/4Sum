Input: arr = [2,2,2,2,2], find = 8
Output: [[2,2,2,2]]
// Don't Forget To convert int to long long
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>>ans;
        sort(nums.begin(),nums.end());
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                int l=j+1;
                int r=n-1;
                long long remain=(long long)target- (long long)nums[i]- (long long)nums[j];
                while(l<r)
                {
                    if(nums[l] +nums[r]==remain)
                    {
                        ans.push_back({nums[i],nums[j],nums[l],nums[r]});
                        ++l;
                        --r;
                        while(l<r && nums[l-1]==nums[l])
                        {
                            ++l;
                        }
                    }
                    else if(nums[l]+nums[r]>remain)
                    {
                        --r;

                    }
                    else
                    {
                        ++l;
                    }
                }
                while(j+1<n && nums[j]==nums[j+1])
                {
                    ++j;
                }
            }
            while(i+1<n && nums[i]==nums[i+1])
            {
                ++i;
            }
        }
        return ans;
    }
};
